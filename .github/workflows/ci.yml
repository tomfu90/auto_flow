name: Run API Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install allure-pytest
      # ✅ 替换失效的 mikepenz action
      - name: Set up Java for Allure
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Install Allure CLI
        run: |
          ALLURE_VERSION=2.29.0
          wget https://github.com/allure-framework/allure2/releases/download/${ALLURE_VERSION}/allure-${ALLURE_VERSION}.tgz
          tar -xzf allure-${ALLURE_VERSION}.tgz
          sudo mv allure-${ALLURE_VERSION} /opt/allure
          echo "/opt/allure/bin" >> $GITHUB_PATH   
      

      - name: Run tests
        env:
          # 注入邮件和报告链接所需的环境变量
          EMAIL_SENDER: ${{ secrets.EMAIL_SENDER }}
          EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
          EMAIL_RECEIVERS: ${{ secrets.EMAIL_RECEIVERS }}
          ALLURE_REPORT_URL: https://tomfu90.github.io/auto_flow/
        run: |
          pytest tests/ -v --tb=short --alluredir=./allure-results
        

      - name: Generate Allure HTML Report
        if: always()
        run: |
          mkdir -p ./allure-results  # 确保目录存在|
          allure generate ./allure-results --clean -o ./allure-report
          

      # ✅ 新增：部署到 GitHub Pages（关键步骤！）
      - name: Deploy Allure Report to GitHub Pages
        if: always()  # ✅ 无论成功、失败、取消，都部署最新报告！
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.DEPLOY_TOKEN }}
          publish_branch: gh-pages
          publish_dir: ./allure-report


